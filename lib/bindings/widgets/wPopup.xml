<?xml version="1.0"?>
<bindings
	xmlns="http://www.mozilla.org/xbl"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">


<!--
wToolbar
	@author INTbonjF
	@date   2006-03-16

	Dynamic context menu which only presents the actions related to the selected elements
	in the attached component (wtree or wlist).
-->
	<binding id="wPopup" extends="widgets.wContextActionsContainer#wContextActionsContainer">


		<implementation>


			<field name="_defaultAttachmentAttribute">'actions-contextmenu'</field>


			<constructor><![CDATA[
				if (this.getAttachedComponent() != null) 
				{
					var popupId = this.id + '_popup';
					var popupElement = this.getElementById('widgetsContainer');
					popupElement.setAttribute('id', popupId);
					this.getAttachedComponent().setAttribute('context', popupId);
				}
				var container = this.getElementById('widgetsContainer');
				this._dynamicActionsOffset = container.childNodes.length;
			]]></constructor>


			<method name="createItem">
				<parameter name="commandId" />
				<body><![CDATA[
					var item = document.createElement('menuitem');
					item.setAttribute('commandid', commandId);
					//item.setAttribute('label', label);
					item.setAttribute('class', 'menuitem-iconic');
					return item;
				]]></body>
			</method>


			<method name="createItemContainer">
			    <parameter name="widgetsContainer" />
				<body><![CDATA[
					return null; // widgetsContainer.appendChild( document.createElement('vbox') );
				]]></body>
			</method>


			<method name="createSeparator">
				<body><![CDATA[
					var item = document.createElement('menuseparator');
					return item;
				]]></body>
			</method>


			<method name="createSpacer">
				<body><![CDATA[
					return this.createSeparator();
				]]></body>
			</method>


			<method name="createActionGroup">
				<parameter name="label" />
				<parameter name="icon" />
				<parameter name="actions" />
				<body><![CDATA[
					var item = document.createElement('menu');
					item.setAttribute('label', label);
					item.setAttribute('image', icon);
					item.setAttribute('flex', '1');
					item.setAttribute('class', 'menu-iconic');

					var menupopup = document.createElement('menupopup');
					
									
					var attachedComponent = this.getAttachedComponent();
					var checkRight = ('getSelectedComponents' in attachedComponent) && ('checkSecurity' in attachedComponent);
					var hideGroupe = true;

					if (checkRight)
					{
						var documents = attachedComponent.getSelectedComponents();
						var countDocument = documents.document.length();
					}
					
					for (var a in actions)
					{
						var actionName = actions[a];

						if (checkRight)
						{
							var display = true;
							for (var i=0; i<countDocument; i++)
							{
								var seldoc = documents.document[i];
								if (!seldoc) { continue;}
								if (!attachedComponent.checkSecurity(actionName, seldoc)
									|| !attachedComponent.checkDisplay(actionName, seldoc, countDocument))
								{
									display = false;
									break;
								}
							}
							if (!display){ continue; }
						}

						var menuitem = document.createElement('menuitem');
						menuitem.setAttribute('class', 'menuitem-iconic');						
						if (this.handleCommand(actionName, menuitem, true))
						{
							hideGroupe = false;	
							menupopup.appendChild(menuitem);
						}
					}
					if (hideGroupe)
					{
						item.setAttribute('collapsed', 'true');
					}
					else
					{
						item.appendChild(menupopup);
					}					
					
					item.appendChild(menupopup);
					return item;
				]]></body>
			</method>


			<method name="getEventType">
				<body><![CDATA[
					return 'contextmenu';
				]]></body>
			</method>
		</implementation>
		<xbl:content xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" xmlns:xbl="http://www.mozilla.org/xbl">
			<popupset anonid="observesContainer">
				<popup anonid="widgetsContainer" xbl:inherits="flex">
					<menuitem class="menuitem-iconic" image="{IconsBase}/small/shadow/refresh.png" label="&amp;modules.uixul.bo.actions.Refresh;" oncommand="refresh()" />
					<xbl:children includes="menuitem" />
				</popup>
			</popupset>
		</xbl:content>
    </binding>
</bindings>
