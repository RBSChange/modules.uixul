<?xml version="1.0"?>
<bindings
	xmlns="http://www.mozilla.org/xbl"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<!--
################################################################################
## wListBox                                                                   ##
################################################################################
-->

	<binding id="wListBox" extends="form.wListField#wListField">

		<implementation>

			<field name="MIN_SELECTED_ATTRIBUTE" readonly="true">"min-selected"</field>
			<field name="MAX_SELECTED_ATTRIBUTE" readonly="true">"max-selected"</field>


			<property name="value">
				<getter><![CDATA[
					var value = [ ];
					for each (var item in this.input_field.selectedItems)
					{
						//this.input_field.ensureElementIsVisible(item);
						value.push(item.value);
					}
					return value;
				]]></getter>
				<setter><![CDATA[
					if (!this.isLoaded)
					{
						//wCore.debug('wListBox.value.setter : _loaded_value');
						this._loaded_value = val;
					}
					else
					{
						//wCore.debug('wListBox.value.setter : set : ' + val);
						this._block_events = true;
						this.input_field.clearSelection();
						var nbItems = this.input_field.getRowCount();
						try
						{
							val = new XML(val);
							var values = [ ];
							for (var i=0 ; i<val.document.length() ; i++)
							{
								values.push(val.document[i].component.(@name=="id").toString());
							}
							val = values;
						}
						catch (e)
						{ 
							wCore.error("wListBox.setter.value", [val], e);
						}
						var ensureIndexIsVisible = -1;
						
						for (var i=0 ; i<nbItems ; i++)
						{
							var item = this.input_field.getItemAtIndex(i);
							item.value = item.getAttribute('value');
							if (typeof(val) == 'string' && item.value == val)
							{
								if (ensureIndexIsVisible == -1) {ensureIndexIsVisible = i;}
								this.input_field.addItemToSelection(item);
							}
							else if (typeof(val) == 'object')
							{
								for each (var j in val)
								{
									if (item.value == j)
									{
										if (ensureIndexIsVisible == -1) {ensureIndexIsVisible = i;}
										this.input_field.addItemToSelection(item);
									}
								}
							}
						}
						if (ensureIndexIsVisible != -1)
						{
							this.input_field.ensureIndexIsVisible(ensureIndexIsVisible);
						}
						this._block_events = false;
						this.list_changed();
						this.validate();
					}
				]]></setter>
			</property>


			<method name="setup_default_items">
				<body><![CDATA[
					var newItem = this.addItem('', this.selectLabel);
				]]></body>
			</method>


		</implementation>

		<handlers>
			<handler event="keypress" modifiers="control" key="a"><![CDATA[
				try 
				{
					// intCourS - 19/07/2006 - Try to fix #754
					// See http://xulplanet.com/references/elemref/ref_listbox.html#cmnote-26 :
					// this.input_field.selectAll();
					var rowCount = this.input_field.getRowCount();
					for (var i = 0 ; i < rowCount; i++)
					{
						var item = this.input_field.getItemAtIndex(i);
						this.input_field.addItemToSelection(item);
					}
					if (this.hasAttribute(this.NONE_ITEM_ATTRIBUTE) || this.hasAttribute(this.BLANK_ITEM_ATTRIBUTE)) {
						this._blockEvents = true;
						this.input_field.toggleItemSelection(this.input_field.getItemAtIndex(0));
						this._blockEvents = false;
					}
					this.input_field.ensureIndexIsVisible(rowCount - 1);
					this.doValidate();
				} 
				catch (e) 
				{
					wCore.error("wListBox.event.keypress", [], e);
				}
			]]></handler>

		</handlers>


		<xbl:content
			xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
			xmlns:xbl="http://www.mozilla.org/xbl">
			<xbl:children />
			<listbox anonid="inputField" seltype="multiple" xbl:inherits="disableKeyNavigation,disabled,preference,rows,seltype,suppressonselect,tabindex,width" />
		</xbl:content>

	</binding>

</bindings>