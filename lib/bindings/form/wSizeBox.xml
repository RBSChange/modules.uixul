<bindings
	xmlns="http://www.mozilla.org/xbl"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

          <!--

          <wsizebox> usage :

          **************
          Simple field :
          **************

              <wsizebox field-name="textsize" />

          This field will defined the "textsize" value, composed of two part :
           - The numeric value (absolute integer or float).
           - The unit value (string).

          This value could be used in stylesheets the following way (cf. Skin Module) :

              <style>
    		      <selector>body</selector>
    		      <declaration property="font-size" skin-ref="textsize">1em</declaration>
    		  </style>

		  ***********************************************
          Simple field with units constraint :
          ***********************************************

              <wsizebox units="px em" />

          By default, the field gives access to all standardized CSS units :
           - em
           - ex
           - px
           - in
           - cm
           - mm
           - pt
           - pc
           - %

          By setting the "units" attribute to a list of space-separated units, the user
          will only have the choice among the ones defined. In ou example :
           - em
           - px

          All others values will be disabled.

          -->

<binding id="wBaseSizeBox" extends="form.wFormField#wFormField" applyauthorstyles="true">

	<implementation>

	 	<property name="defaultValue">
			<getter>
			<![CDATA[
				if (this.hasAttribute('defaultValue'))
				{
					return this.getAttribute('defaultValue');
				}
				return false;
			]]>
			</getter>
		</property>

		<property name="userValue">
	 		<getter>
	 		<![CDATA[
	 		    return this.getElementById("inputField").value;
	 		]]>
	 		</getter>
	 		<setter>
	 		<![CDATA[
    	 		this.getElementById("inputField").value = val;
    			this.doValidate();
			]]>
	 		</setter>
	 	</property>

	 	<property name="unitValue">
	 		<getter>
	 		<![CDATA[
	 		    return this.getElementById("unitValue").value;
	 		]]>
	 		</getter>
	 		<setter>
	 		<![CDATA[
	 		    var menupopup = this.getElementById("unitValue").menupopup;
	 		    for (var i = 0; i < menupopup.childNodes.length; i++)
	 		    {
	 		        if (menupopup.childNodes[i].value == val)
	 		        {
	 		            this.getElementById("unitValue").selectedIndex = i;
	 		            break;
	 		        }
	 		    }
    	 		this.getElementById("unitValue").value = val;
			]]>
	 		</setter>
	 	</property>

	 	<property name="value">
	 		<getter>
	 		<![CDATA[
	 		    if (this.userValue && this.validateOnly())
	 		    {
	 		        return this.userValue + this.unitValue;
	 		    }
	 		    return "";
	 		]]>
	 		</getter>
	 		<setter>
	 		<![CDATA[
	 		    val = String(val);
	 		    if (val != "")
	 		    {
        	 		val = val.match(/^([0-9\.]+)(\D+)$/);
        	 		if (val)
        	 		{
            	 		this.userValue = val[1];
            	 		this.unitValue = val[2];
            	    }
        	    }
			]]>
	 		</setter>
	 	</property>

		<constructor><![CDATA[
		    if (this.hasAttribute("units") && (this.getAttribute("units") != ""))
		    {
		        var units = this.getAttribute("units").split(" ");
		        var menupopup = this.getElementById("unitValue").menupopup;
	 		for (var i = 0; i < menupopup.childNodes.length; i++)
	 		{
	 		    if (!in_array(menupopup.childNodes[i].value, units))
    		            {
    		                menupopup.childNodes[i].setAttribute("disabled", "true");
    		            }
    		        }
		    }
		    
    		    var menupopup = this.getElementById("unitValue").menupopup;
     		    for (var i = 0; i < menupopup.childNodes.length; i++)
     		    {
     		    	if (!menupopup.childNodes[i].hasAttribute("disabled"))
    		        {
    		            this.getElementById("unitValue").selectedIndex = i;
    	 		    break;
    		        }
		    }

		    this.reset();

    		    // this.doValidate();
		]]></constructor>

		<method name="doValidate">
			<body><![CDATA[
			    var v;
			    if ( ! this.disabled )
			    {
			        v = this.validate();
				}
				else
				{
					v = true;
				}
				this.set_is_valid(v);
				return v;
			]]></body>
		</method>

		<method name="validate">
			<body>
			<![CDATA[
			    var validate = this.validateOnly();
				this.set_is_valid(validate);
				return validate;
			]]>
			</body>
		</method>

		<method name="validateOnly">
			<body>
			<![CDATA[
			    var validate = false;
			    if (this.required && !this.userValue)
				{
					validate = false;
				}
				else if (!this.required && !this.userValue)
				{
					validate = true;
				}
				else
				{
				    if (this.userValue.match(/^[0-9]+(\.[0-9]+)?$/))
				    {
				        validate = true;
				    }
				}
				return validate;
			]]>
			</body>
		</method>

		<method name="reset">
			<body>
			<![CDATA[
				if (this.defaultValue)
				{
					this.value = this.defaultValue;
				}
				else
				{
					this.empty();
				}
			]]>
			</body>
		</method>

		<method name="empty">
			<body>
			<![CDATA[
			    this.userValue = "";			    
        	    // this.unitValue = "em";
			    var menupopup = this.getElementById("unitValue").menupopup;
     		    for (var i = 0; i < menupopup.childNodes.length; i++)
     		    {
     		    	if (!menupopup.childNodes[i].hasAttribute("disabled"))
    		        {
    		            this.getElementById("unitValue").selectedIndex = i;
    	 		        break;
    		        }
    		    }
			]]>
			</body>
		</method>

	</implementation>

</binding>

<binding id="wSizeBox" extends="form.wSizeBox#wBaseSizeBox" applyauthorstyles="true">

	<xbl:content
			xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
			xmlns:xbl="http://www.mozilla.org/xbl">

        <hbox align="start">
    		<textbox anonid="inputField"
    		         class="inputField"
    		         size="5"
    		         xbl:inherits="disabled" />

    		<menulist anonid="unitValue"
    		          class="unitValue"
    		          width="120px"
    		          style="margin-left: -2px !important;">
              <menupopup>
                <menuitem label="&amp;modules.uixul.bo.sizeBox.em;" value="em" />
                <menuitem label="&amp;modules.uixul.bo.sizeBox.ex;" value="ex" />
                <menuitem label="&amp;modules.uixul.bo.sizeBox.px;" value="px" />
                <menuseparator />
                <menuitem label="&amp;modules.uixul.bo.sizeBox.in;" value="in" />
                <menuitem label="&amp;modules.uixul.bo.sizeBox.cm;" value="cm" />
                <menuitem label="&amp;modules.uixul.bo.sizeBox.mm;" value="mm" />
                <menuitem label="&amp;modules.uixul.bo.sizeBox.pt;" value="pt" />
                <menuitem label="&amp;modules.uixul.bo.sizeBox.pc;" value="pc" />
                <menuseparator />
                <menuitem label="%" value="%" />
              </menupopup>
            </menulist>
            <wsuggestionbutton anonid="suggestionInputField" />

        </hbox>

   		<xbl:children />

		</xbl:content>

</binding>

</bindings>
