<?xml version="1.0"?>
<actions>

	<action name="editLocale" label="&amp;modules.uixul.bo.actions.Edit-locale;" global="false" icon="translate">
		<parameter name="listWidget" />
		<body><![CDATA[
			editLocale();
		]]></body>
	</action>
	
	<action name="editPreferences" label="&amp;modules.uixul.bo.general.PreferencesEllipsis;" icon="preferences" global="false">
		<parameter name="listWidget" />
		<body><![CDATA[
		    var requestUrl = Context.UIBASEURL + "/xul_controller.php?module=" + this.name + "&action=GetPreferencesDocument";
		    try
		    {
    		    p = new XMLHttpRequest();
                p.onload = null;
                p.open("GET", requestUrl, false);
                p.send(null);
                
                var xmlParser = new DOMParser();
				var xmlResponse = xmlParser.parseFromString(p.responseText, 'text/xml');

                if (xmlResponse)
                {
                    var preferencesDocumentId = parseInt(xmlResponse.getElementsByTagName('id').item(0).firstChild.data);
                    var preferencesDocumentLang = this.getContextLang(listWidget);
			        var form = document.getElementById("modules_"+this.name+"_widget_moduleForm");
			        form.setAttribute('module', this.name);
			        form.setAttribute('document', preferencesDocumentId + ' ' + preferencesDocumentLang);
			        form.setAttribute('document-type', 'preferences');
			        form.setAttribute('document-lang', preferencesDocumentLang);
		            if (preferencesDocumentId > 0)
				    {
				        form.callMethod(
				        	'initData',
				        	this.name,
				        	'Load',
				        	{
				        		{K::COMPONENT_ID_ACCESSOR}: preferencesDocumentId,
				        	  	{K::COMPONENT_LANG_ACCESSOR}: preferencesDocumentLang
				        	},
				        	{
				        		{K::COMPONENT_ID_ACCESSOR}: preferencesDocumentId,
				        	  	{K::COMPONENT_LANG_ACCESSOR}: preferencesDocumentLang
				        	}
				        	);
					}
                }
            }
            catch (e)
            {
                wCore.debug("Error in editPreferences(): "+e.message);
		        var form = document.getElementById("modules_"+this.name+"_widget_moduleForm");
		        form.setAttribute('module', this.name);
		        form.setAttribute('document-type', 'preferences');
		        form.setAttribute('document-lang', this.getContextLang(listWidget));
            }
		]]></body>
		<checkDisplay><![CDATA[
			return this.getModuleHeader().getAttribute('hide-preferences') != "true";
		]]></checkDisplay>
	</action>
	
	<action name="closeModuleAction" label="&amp;modules.uixul.bo.general.buttons.Close-module;" global="false" icon="error" hasSeparator="true">
	<parameter name="listWidget" />
		<body><![CDATA[
			this.closeModule();
		]]></body>
	</action>

	<action name="refresh" label="&amp;modules.uixul.bo.actions.Refresh;" icon="refresh">
		<parameter name="listWidget" />
		<body><![CDATA[
			listWidget.refresh();
		]]></body>
	</action>

	<action name="openFolder" label="&amp;modules.uixul.bo.actions.OpenFolder;" icon="folder_into">
		<parameter name="listWidget" />
		<body><![CDATA[
			listWidget.openFolder();
		]]></body>
	</action>


	<action name="delete" label="&amp;modules.uixul.bo.actions.Delete;" localized="true" icon="delete2">
		<parameter name="listWidget" />
		<body><![CDATA[
			var docs = listWidget.getSelectedComponents();
			var labels = listWidget.getSelectedLabels();
			var ids = [ ], parentIds = [ ];
			var lang = this.getContextLang(listWidget);

			for (var i=0 ; i<docs.document.length() ; i++)
			{
			    if (this.isContextLangAvailable(docs.document[i]))
    		    {
    				ids.push(docs.document[i].component.(@name=="id").toString());
    				parentIds.push(docs.document[i].component.(@name=="parentid").toString());
    		    }
			}

			var label;
			if (labels.length > 10)
			{
				label = "&amp;modules.uixul.bo.general.ConfirmDeleteMessage; (" + labels.length + " &amp;modules.uixul.backoffice.items;)";
			}
			else
			{
				label = "&amp;modules.uixul.bo.general.ConfirmDeleteMessageList;\n - " + labels.join("\n - ");
			}

			if (confirm(label))
			{
				var label = labels.join(", ");
				if (label.length > 100)
				{
					label = labels.length + " &amp;modules.uixul.bo.general.items;";
				}
				this.doDelete(ids, label, parentIds, lang, listWidget);
			}
		]]></body>
	</action>


	<action name="rename" label="&amp;modules.uixul.bo.actions.Rename;" localized="true" icon="element_into_input">
		<parameter name="listWidget" />
		<body><![CDATA[
			listWidget.openRenamePanel();
		]]></body>
	</action>


	<action name="move" label="&amp;modules.uixul.bo.actions.Move;" localized="true" icon="up_down">
		<parameter name="sourceComponents" />
		<parameter name="targetComponent" />
		<parameter name="listWidget" />
		<body><![CDATA[
			if (this.isContextLangAvailable(targetComponent))
    		{
    			this.doMove(sourceComponents, targetComponent);
    	    }
		]]></body>
	</action>

	<action name="remove" label="&amp;modules.uixul.bo.actions.Remove;" icon="index_delete">
		<parameter name="listWidget" />
		<body><![CDATA[
	    	var ids = listWidget.getSelectedIds();
	    	var parentid = listWidget.getSelectedComponents().document[0].component.(@name=="parentid").toString();
	    	var lang = this.getContextLang(listWidget);
			this.execute("%label%", "Remove", { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang, {K::PARENT_ID_ACCESSOR} : parentid });
	    ]]></body>
	</action>


	<action name="openTags" selectionType="single" label="&amp;modules.uixul.bo.actions.Open-tags-panel;" icon="edit-tags">
		<parameter name="listWidget" />
		<body><![CDATA[
			listWidget.openTagsPanel();
		]]></body>
		<checkDisplay><![CDATA[
			return countDocument == 1 && document.component.(@name=="status") != 'CORRECTION';
		]]></checkDisplay>
	</action>


	<action name="openOrderChildren" selectionType="single" label="&amp;modules.uixul.bo.actions.Set-children-order;" icon="document_exchange">
		<parameter name="listWidget" />
		<body><![CDATA[
			listWidget.orderChildrenPanel.setRelationName(null);
			listWidget.openOrderChildrenPanel(null, null);
		]]></body>
	</action>

	<action name="viewInformation" selectionType="single" label="&amp;modules.uixul.bo.actions.View-information;" icon="document_info">
		<parameter name="listWidget" />
		<body><![CDATA[
		    listWidget.openPreviewPanel();
		]]></body>
	</action>


	<action name="createFolder" selectionType="single" label="&amp;modules.uixul.bo.actions.Create-folder;" icon="folder_add">
		<parameter name="listWidget" />
		<body><![CDATA[
			this.createDocument(listWidget, 'generic', 'folder', 'moduleForm');
		]]></body>
	</action>


	<action name="edit" selectionType="single" label="&amp;modules.uixul.bo.actions.Edit;" icon="document_edit">
		<parameter name="listWidget" />
		<body><![CDATA[
			var items = listWidget.getSelectedItems();
			if (items.length == 1)
			{
				if (this.openDocumentEditor(items[0])) {return;}
				
				var components = listWidget.getSelectedComponents();
    		    if (this.isContextLangAvailable(components.document[0]))
    		    {
    		    	var id = components.document[0].component.(@name=="id").toString();
    		    	var type = components.document[0].component.(@name=="type").toString();    		    	
    		    	
    		    	 		    	
    			    form = document.getElementById("modules_"+this.name+"_widget_moduleForm");
    				if (form != null)
    				{
    					form.resetDefaultActions();
    					form.maximize();
    				}
    				
    				// intbonjf 2007-01-16:
    				// For the broadcast to operate each time we request the edit action,
    				// the value of the 'editcomponent' attribute must change.
    				listWidget.removeAttribute('editcomponent');
    			    listWidget.setAttribute('editcomponent', components.toString());
    			}
    			else if (this.isTranslatable(components.document[0]))
    			{
    				if (confirm("&modules.uixul.bo.general.translation.Confirm-translate-from;"))
    				{
    			    	this.translateFrom(listWidget);
    			    }
    			}
			}
		]]></body>
	</action>

	<action name="exportCsv" label="&amp;modules.uixul.bo.actions.Export-Csv;" icon="export1">
		<parameter name="listWidget"/>
		<body><![CDATA[
			var ids = listWidget.getSelectedIds();
	    	var lang = this.getContextLang(listWidget);
			wToolkit.openlink(this.name, 'ExportCsv', { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang});
		]]></body>
	</action>

	<action name="editPermissions" selectionType="single" label="&amp;modules.uixul.bo.actions.Edit-permissions;" icon="shield_yellow">
		<parameter name="listWidget" />
		<body><![CDATA[
		    var docs = listWidget.getSelectedComponents();
			if (docs.document.length() == 1)
			{
				var documentId   = docs.document[0].component.(@name=="id").toString();
				var documentLang = docs.document[0].component.(@name=="lang").toString();
				var form = document.getElementById("modules_"+this.name+"_widget_moduleForm");

				// detach the form from its attached component (generally a list)
				// in order to make it independant
				form.detach();
				
				form.removeAttribute("document");
				
				// load the form for the requested document type
				form.setAttribute('module', this.name);
				form.setAttribute('document-type', 'permission');
				form.setAttribute('parent-id', documentId);
				form.setAttribute('document-lang', documentLang);

				form.loadActionName = 'LoadPermissions';
				form.saveActionName = 'SavePermissions';
				form.reattach(false);
				form.callMethod('load', documentId, documentLang);
			}
		]]></body>
	</action>


	<action name="translateFrom" selectionType="single" label="&amp;modules.uixul.bo.general.translation.Translate-fromEllipsis;" icon="documents_new">
		<parameter name="listWidget" />
		<body><![CDATA[
		    var id = listWidget.getSelectedIds()[0];

		    var vo = listWidget.getSelectedComponents().document[0].component.(@name=="vo").toString();

		    var lang = listWidget.getSelectedComponents().document[0].component.(@name=="lang").toString();

		    var parentid = listWidget.getSelectedComponents().document[0].component.(@name=="parentid").toString();

		    var documenttype = listWidget.getSelectedComponents().document[0].component.(@name=="type").toString().split('_');
		    var moduleName = documenttype[1];
		    documenttype = documenttype[documenttype.length - 1];

		    var documentLanguages = listWidget.getSelectedComponents().document[0].component.(@name=="languages").split(',');

		    var prompts = Components.classes["@mozilla.org/embedcomp/prompt-service;1"].getService(Components.interfaces.nsIPromptService);

            var list = [];
            for (var i in documentLanguages)
            {
                if (documentLanguages[i] == lang)
                {
                    list = [];
                    break;
                }
                else
                {
                    var label = this.getLanguageLabel(documentLanguages[i]);

                    if (i == 0)
                    {
                        label += " (&modules.uixul.bo.general.translation.vo;)";
                    }

                    list.push(label);
                }
            }

            if (list.length > 0)
            {
                var selected = {};
                var proceed = prompts.select(
                    window,
                    "&modules.uixul.bo.general.translation.Translate-fromEllipsis;",
                    "&modules.uixul.bo.general.translation.Translate-headerLabel;",
                    Math.min(10, list.length),
                    list,
                    selected
                );
                if (proceed)
                {    		
        		    var form = this.createDocument(listWidget, moduleName, documenttype, 'moduleForm');
        			form.callMethod(
        			    'initData',
        			    'generic',
        			    'LoadForTranslation',
        			    {{K::COMPONENT_ID_ACCESSOR}: id, {K::LANG_ACCESSOR}: documentLanguages[selected.value] },
        			    {{K::COMPONENT_ID_ACCESSOR}: id, {K::LANG_ACCESSOR}: lang, {K::PARENT_ID_ACCESSOR}: parentid  }
        			);
        	    }
        	}
        	else
        	{
        	   alert("&modules.uixul.bo.general.translation.Translate-already-exist;");
        	}
		]]></body>
	</action>



	<action name="showHelp" label="&amp;modules.uixul.bo.actions.ShowHelpEllipsis;" icon="help2">
		<parameter name="listWidget" />
		<body><![CDATA[
		    wToolkit.dialog('uixul', 'ShowHelp', {wemod: this.name}, {width: 650}, true, true);
		]]></body>
	</action>

	<action name="duplicate" label="&amp;modules.uixul.bo.actions.Duplicate;" icon="copy">
		<parameter name="listWidget" />
		<body><![CDATA[
		    var ids = listWidget.getSelectedIds();
	    	var parentid = listWidget.getSelectedComponents().document[0].component.(@name=="parentid").toString();
	    	var lang = this.getContextLang(listWidget);
			this.execute("%label%", "Duplicate", { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang, {K::PARENT_ID_ACCESSOR} : parentid });
		]]></body>
	</action>

<!--
###############################################################################
##                                                                           ##
##    WORKFLOW MANAGEMENT                                                    ##
##                                                                           ##
###############################################################################
-->

  <action name="startValidation" label="&amp;modules.uixul.bo.actions.StartValidation;" icon="megaphone" selectionType="single">
    <parameter name="listWidget"/>
    <body><![CDATA[
    	var components = listWidget.getSelectedComponents();
    	var id = wCore.getSelectionAttribute(components, 'id')[0];
    	var lang = this.getContextLang(listWidget);
    	var label = wCore.getSelectionAttribute(components, 'label')[0];
    	var parameters = {id: id, label: label, lang: lang}
    	this.getController().openModalDialog(this, "startworkflow", parameters);  	
    ]]></body>
    <checkDisplay><![CDATA[
    	var status = document.component.(@name=="status");
    	return status == 'DRAFT' || status == 'CORRECTION';
    ]]></checkDisplay>
  </action>

  <action name="activate" label="&amp;modules.uixul.bo.actions.Activate;" icon="media_play_green">
    <parameter name="listWidget"/>
    <body><![CDATA[
    	var ids = listWidget.getSelectedIds();
    	var lang = this.getContextLang(listWidget);
		this.execute("%label%", "Activate", { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang });
    ]]></body>
    <checkDisplay><![CDATA[
    	var status = document.component.(@name=="status");
    	return status == 'DRAFT' || status == 'CORRECTION';
    ]]></checkDisplay>
  </action>

  <action name="deactivated" label="&amp;modules.uixul.bo.actions.Deactivate;" icon="media_pause">
    <parameter name="listWidget"/>
    <body><![CDATA[
    	var ids = listWidget.getSelectedIds();
    	var lang = this.getContextLang(listWidget);
    	this.execute("%label%", "Deactivated", { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang });
    ]]></body>
    <checkDisplay><![CDATA[
    	var status = document.component.(@name=="status");
    	return status == 'ACTIVE' || status == 'PUBLICATED';
    ]]></checkDisplay>
  </action>

   <action name="reactivate" label="&amp;modules.uixul.bo.actions.ReActivate;" icon="media_play">
    <parameter name="listWidget"/>
    <body><![CDATA[
    	var ids = listWidget.getSelectedIds();
    	var lang = this.getContextLang(listWidget);
		this.execute("%label%", "ReActivate", { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang });
    ]]></body>
    <checkDisplay><![CDATA[
    	return document.component.(@name=="status") == 'DEACTIVATED';
    ]]></checkDisplay>
  </action>

  <action name="file" label="&amp;modules.uixul.bo.actions.File;" icon="document_down">
    <parameter name="listWidget"/>
    <body><![CDATA[
    	var ids = listWidget.getSelectedIds();
    	var lang = this.getContextLang(listWidget);
		this.execute("%label%", "File", { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang });
    ]]></body>
  </action>

  <action name="putInTrash" label="&amp;modules.uixul.bo.actions.PutInTrash;" icon="garbage">
    <parameter name="listWidget"/>
    <body><![CDATA[
    	var ids = listWidget.getSelectedIds();
    	var lang = this.getContextLang(listWidget);
		this.execute("%label%", "PutInTrash", { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang });
    ]]></body>
  </action>

  <action name="cancel" label="&amp;modules.uixul.bo.actions.Cancel;" icon="document_dirty">
    <parameter name="listWidget"/>
    <body><![CDATA[
    	var ids = listWidget.getSelectedIds();
    	var lang = this.getContextLang(listWidget);
		this.execute("%label%", "Cancel", { {K::COMPONENT_ID_ACCESSOR}: ids, {K::COMPONENT_LANG_ACCESSOR} : lang });
    ]]></body>
  </action>
  
  <action name="addTopic" label="&amp;modules.uixul.bo.actions.AddTopic;" icon="index">
    <parameter name="listWidget"/>
    <body><![CDATA[
    	var ids = listWidget.getSelectedIds();
    	var lang = this.getContextLang(listWidget);
    	this.getController().openModalDialog(this, "addtopic", ids);
    ]]></body>
  </action>
</actions>
